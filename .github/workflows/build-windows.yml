name: Build Windows Executable
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Permite ejecutar manualmente

jobs:
  build-windows:
    runs-on: windows-2022  # Especificar versión para evitar migración
    steps:
    - uses: actions/checkout@v4  # Versión actualizada
    
    - name: Set up Python
      uses: actions/setup-python@v5  # Versión actualizada
      with:
        python-version: 3.9
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask requests dbfread
        
    - name: Install PyInstaller
      run: |
        pip install pyinstaller
        
    - name: Build executable
      run: |
        pyinstaller --onefile --console --name DBF_Uploader_Flexi flask_dbf_uploader.py
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4  # Versión actualizada
      with:
        name: windows-executable
        path: dist/DBF_Uploader_Flexi.exe
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Windows executable generated automatically
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/DBF_Uploader_Flexi.exe
        asset_name: DBF_Uploader_Flexi.exe
        asset_content_type: application/octet-stream